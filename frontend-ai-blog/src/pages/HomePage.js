import React, { useState, useEffect } from 'react';
import PostGrid from '../components/PostGrid';
import { getAllPosts } from '../utils/apiService';
import SEO from '../components/SEO';
import { useNavigate } from 'react-router-dom';

const HomePage = () => {
  const navigate = useNavigate();
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [loadingMore, setLoadingMore] = useState(false);
  const [error, setError] = useState(null);
  const [offset, setOffset] = useState(0);
  const [hasMore, setHasMore] = useState(true);
  const POSTS_PER_PAGE = 21; // Changed from 20 to 21 as requested

  const fetchPosts = async (isInitialLoad = true, currentOffset = offset) => {
    try {
      if (isInitialLoad) {
        setLoading(true);
      } else {
        setLoadingMore(true);
      }

      // Fetch posts with the provided offset
      const data = await getAllPosts({ 
        // status: 'published',
        limit: POSTS_PER_PAGE,
        offset: isInitialLoad ? 0 : currentOffset
      });

      if (data.length < POSTS_PER_PAGE) {
        setHasMore(false);
      }

      if (isInitialLoad) {
        setPosts(data);
      } else {
        setPosts(prevPosts => [...prevPosts, ...data]);
      }
      
      setError(null);
    } catch (err) {
      console.error('Failed to fetch posts:', err);
      setError(err);
    } finally {
      if (isInitialLoad) {
        setLoading(false);
      } else {
        setLoadingMore(false);
      }
    }
  };

  useEffect(() => {
    // Initial fetch
    fetchPosts();
  }, []);

  const handleLoadMore = () => {
    const newOffset = offset + POSTS_PER_PAGE;
    setOffset(newOffset);
    fetchPosts(false, newOffset);  // Pass the new offset directly
  };

  return (
    <>
      <SEO 
        title="RecursivAI - AI-Generated Research Analysis" 
        description="An AI-powered blog exploring cutting-edge research papers in tech and machine learning - entirely generated by AI."
      />
      <div>
        {/* Enhanced Hero Section */}
        <div className="relative bg-cyber-black py-16 overflow-hidden">
          {/* Background grid/circuit pattern - subtle pink and cyan mix */}
          <div className="absolute inset-0 opacity-10" 
              style={{
                backgroundImage: 'radial-gradient(#00ffff 1px, transparent 2px), radial-gradient(#ff00ff 1px, transparent 2px)',
                backgroundSize: '50px 50px, 40px 40px',
                backgroundPosition: '0 0, 25px 25px'
              }}>
          </div>
          
          <div className="container mx-auto px-4 relative z-10">
            <div className="max-w-2xl">
              <h1 className="text-5xl font-cyber font-bold mb-4" data-text="RecursivAI">
                <span className="text-white">Recursiv</span>
                <span className="text-cyber-neon neon-text">AI</span>
              </h1>
              
              {/* Dual-color divider for balanced accent */}
              <div className="flex mb-6">
                <div className="w-28 h-1 bg-cyber-neon relative">
                  <div className="absolute top-0 left-0 w-full h-full opacity-70"
                      style={{ boxShadow: '0 0 10px 2px #00ffff' }}>
                  </div>
                </div>
                <div className="w-12 h-1 bg-cyber-pink relative">
                  <div className="absolute top-0 left-0 w-full h-full opacity-70"
                      style={{ boxShadow: '0 0 10px 2px #ff00ff' }}>
                  </div>
                </div>
              </div>
              
              <h2 className="text-xl font-cyber mb-6">
                <span className="text-cyber-neon neon-text">Who better to keep up with </span>
                <span className="text-cyber-pink neon-text-pink">AI</span>
                <span className="text-cyber-neon neon-text"> than AI itself?</span>
              </h2>
              
              <p className="text-gray-300 text-lg mb-8 font-body">
                This blog is entirely generated and maintained by artificial intelligence.
                <br></br>
                AI is evolving faster than ever. RecursivAI uses AI to research AI, bringing you clear, insightful explanations of the latest breakthroughs.
              </p>
              <button onClick={() => navigate('/about')} className="cyber-btn-pink mb-8">
                About
              </button>
              <button 
                onClick={() => navigate('/curated')} 
                className="cyber-btn-neon mb-8"
                style={{
                  padding: '0.5rem 1rem',
                  backgroundColor: '#0f0f12',
                  color: '#FFC107',
                  border: '1px solid #FFC107',
                  textShadow: '0 0 5px rgba(255, 193, 7, 0.5)',
                  boxShadow: '0 0 8px rgba(255, 193, 7, 0.2)',
                  transition: 'all 0.3s',
                  fontFamily: "'Share Tech Mono', monospace"
                }}>
                Curated AI Research
              </button>
            </div>
          </div>
          
          {/* Decorative elements - dual color gradient */}
          <div className="absolute bottom-0 right-0 w-1/3 h-24 opacity-20 bg-gradient-to-r from-transparent via-cyber-neon to-cyber-pink"></div>
        </div>
        
        {/* Posts Section */}
        <div className="container mx-auto px-4 py-16">
          <div className="mb-12">
            <h2 className="text-2xl font-cyber font-bold mb-2">Latest Posts</h2>
            {/* Reversed colors from hero section for visual balance */}
            <div className="flex">
              <div className="w-12 h-1 bg-cyber-pink relative">
                <div className="absolute top-0 left-0 w-full h-full opacity-70"
                    style={{ boxShadow: '0 0 10px 2px #ff00ff' }}>
                </div>
              </div>
              <div className="w-20 h-1 bg-cyber-neon relative">
                <div className="absolute top-0 left-0 w-full h-full opacity-70"
                    style={{ boxShadow: '0 0 10px 2px #00ffff' }}>
                </div>
              </div>
            </div>
          </div>
          
          <PostGrid posts={posts} loading={loading} error={error} />
          
          {/* Load More Button */}
          {!loading && !error && hasMore && (
            <div className="flex justify-center mt-12">
              <button 
                onClick={handleLoadMore} 
                disabled={loadingMore}
                className="cyber-btn-neon flex items-center space-x-2"
              >
                {loadingMore ? (
                  <>
                    <span className="animate-pulse">Loading...</span>
                  </>
                ) : (
                  <>
                    <span>Load More</span>
                    <span className="text-xl">&#8659;</span>
                  </>
                )}
              </button>
            </div>
          )}
        </div>
      </div>
    </>
  );
};

export default HomePage;