import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import { getAllPosts, getNewsPosts } from "../utils/apiService";
import SEO from "../components/SEO";
import Header from "../components/Header";
import Footer from "../components/Footer";
import { formatDate } from "../utils/formatters";

const LandingPage = ({ initialPosts, initialNewsPosts }) => {
  const [error, setError] = useState(null);
  const [email, setEmail] = useState('');
  const [isSubscribed, setIsSubscribed] = useState(false);
  const [submitting, setSubmitting] = useState(false);
  const [subscribeError, setSubscribeError] = useState('');

  const handleSubmit = async (e) => {
    e.preventDefault();
    setSubscribeError('');
    if (!email || !email.includes('@')) {
      setSubscribeError('Please enter a valid email.');
      return;
    }
    try {
      setSubmitting(true);
      const res = await fetch('/api/subscribe', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email })
      });
      const data = await res.json().catch(() => ({}));
      if (!res.ok) {
        throw new Error(data?.error || 'Subscription failed');
      }
      setIsSubscribed(true);
      setEmail('');
      setTimeout(() => setIsSubscribed(false), 5000);
    } catch (err) {
      setSubscribeError(err.message || 'Subscription failed');
    } finally {
      setSubmitting(false);
    }
  };

  // Placeholders for images if a news item lacks one
  const placeholderImages = [
    "/images/placeholder-1.jpeg",
    "/images/placeholder-2.jpg",
    "/images/placeholder-3.png",
    "/images/placeholder-4.jpg",
  ];
  const getPlaceholderImage = (index) => placeholderImages[index % placeholderImages.length];

  const hotNewsPosts = Array.isArray(initialNewsPosts) ? initialNewsPosts.slice(0, 6) : [];

  const valueProps = [
    {
      icon: "‚è±Ô∏è",
      title: "3-minute brief",
      description: "Digest breakthroughs, launches, and policy moves fast enough to share before stand-up."
    },
    {
      icon: "üß≠",
      title: "Actionable framing",
      description: "Each item explains why it matters for engineering, product, and leadership decisions."
    },
    {
      icon: "ü§ñ",
      title: "Autonomous newsroom",
      description: "RecursivAI hunts, scores, and writes‚ÄîRex keeps the tone sharp and human."
    }
  ];

  const rexEditorialPillars = [
    "Signal over spectacle",
    "Context before commentary",
    "Always cite the source",
    "One fun Rex aside per issue"
  ];

  // Rex testimonials
  const rexTestimonials = [
    {
      quote: "Every morning I get the three AI shifts that matter, plus the context for what to do next.",
      author: "Dr. Sarah Chen",
      role: "AI Research Lead, TechCorp",
      rex: "ü¶ï"
    },
    {
      quote: "RecursivAI replaced an hour of internal briefing prep. The signal-to-noise ratio is unbeatable.",
      author: "Marcus Rodriguez",
      role: "CTO, StartupAI",
      rex: "ü¶ï"
    },
    {
      quote: "It's the briefing I forward to leadership. No hype, just implications for the roadmap.",
      author: "Jennifer Park",
      role: "VP Strategy, Fortune 500",
      rex: "ü¶ï"
    }
  ];

  if (error) {
    return (
      <>
        <SEO
          title="RecursivAI - AI Research, Explained by AI"
          description="An AI-powered blog exploring cutting-edge research papers in tech and machine learning - entirely generated by AI."
        />
        <div className="text-center py-10 bg-[#FAF9F5] text-red-600">
          Failed to load content. Please try again later.
        </div>
      </>
    );
  }

  return (
    <>
      <SEO
        title="RecursivAI - AI Research, Explained by AI"
        description="An AI-powered blog exploring cutting-edge research papers in tech and machine learning - entirely generated by AI."
      />
      
      <div className="w-full bg-[#FAF9F5]">
        <div className="newspaper-page min-h-screen w-full bg-[#FAF9F5] text-black max-auto">
          
          <Header />

          {/* Main Content */}
          <main className="py-6 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 border-t-4 border-double border-black bg-[#FAF9F5]">
            
            {/* Hero Section - Newsletter-style */}
            <div className="grid grid-cols-1 lg:grid-cols-12 gap-8 mb-10">
              {/* Main Feature */}
              <div className="lg:col-span-7 lg:border-r border-gray-300 lg:pr-10">
                <div className="mb-10">
                  <span className="inline-flex items-center gap-2 border border-black px-3 py-1 text-xs uppercase tracking-[0.2em] font-sans font-semibold mb-4">
                    RecursivAI Daily Intelligence
                  </span>
                  <h1 className="text-4xl sm:text-5xl font-serif font-bold mb-4 leading-tight">
                    The fastest way to brief your team on what <span className="bg-yellow-200 px-1">actually</span> changed in AI today.
                  </h1>
                  <p className="text-lg mb-5 font-serif text-gray-800">
                    RecursivAI&apos;s autonomous newsroom pulls signal from the noise. Rex keeps it sharp‚Äîno hype, no doomscrolling, just the shifts in AI that impact product, engineering, and strategy.
                  </p>
                  <div className="grid grid-cols-1 sm:grid-cols-3 gap-3 mb-8">
                    {valueProps.map((item) => (
                      <div key={item.title} className="border border-gray-300 bg-white p-4 flex flex-col gap-2 hover:shadow-sm transition-shadow duration-200">
                        <span className="text-2xl" aria-hidden="true">{item.icon}</span>
                        <h3 className="text-sm font-semibold uppercase tracking-wide font-sans text-gray-900">{item.title}</h3>
                        <p className="text-sm font-serif text-gray-700 leading-relaxed">{item.description}</p>
                      </div>
                    ))}
                  </div>

                  <div className="flex flex-col sm:flex-row sm:items-center gap-4 mb-8">
                    <div className="flex -space-x-2">
                      {[1, 2, 3, 4].map((avatar) => (
                        <div key={avatar} className="w-10 h-10 rounded-full border-2 border-[#FAF9F5] bg-gray-300" />
                      ))}
                    </div>
                    <p className="text-sm text-gray-700 font-serif">
                      Trusted by <strong>220+ product leaders, engineers, and investors</strong> who need the facts before stand-up.
                    </p>
                  </div>

                  {/* Quick News CTA for non-subscribers */}
                  <div className="mb-8">
                    <Link
                      href="/news"
                      className="inline-flex items-center gap-3 px-7 py-3 rounded-full border border-[#2F2D2A] text-[#2F2D2A] font-serif font-bold shadow-[4px_4px_0px_#2F2D2A] transition-all duration-300 hover:bg-[#2F2D2A] hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#F5B400] group"
                      aria-label="Skip to the full AI news briefing"
                    >
                      <span className="text-sm sm:text-base">Skip straight to today&apos;s brief</span>
                      <span className="text-xl transition-transform duration-300 group-hover:translate-x-1" aria-hidden="true">‚Üí</span>
                    </Link>
                  </div>

                  {/* Newsletter Signup */}
                  <div id="subscribe" className="border-2 border-gray-400 p-6 bg-white shadow-lg">
                    <div className="flex items-center mb-3">
                      <span className="text-3xl mr-3" role="img" aria-label="Rex">ü¶ï</span>
                      <h2 className="text-xl font-serif font-bold">Get Rex&apos;s daily AI intelligence briefing</h2>
                    </div>
                    <p className="text-sm text-gray-700 font-serif mb-4">
                      Delivered before 7 AM ET. Three stories, one Rex aside, links to primary sources.
                    </p>
                    <div className="flex flex-col sm:flex-row gap-3 mb-3">
                      <input
                        type="email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        placeholder="you@company.com"
                        className="flex-1 px-4 py-3 border-2 border-gray-300 text-base font-serif"
                        required
                      />
                      <button
                        onClick={handleSubmit}
                        disabled={submitting}
                        className={`px-6 py-3 bg-black text-white font-serif font-bold transition-colors ${submitting ? 'opacity-70 cursor-not-allowed' : 'hover:bg-gray-800'}`}
                      >
                        {submitting ? 'Subscribing‚Ä¶' : 'Join the briefing'}
                      </button>
                    </div>
                    {subscribeError && (
                      <div className="p-3 bg-red-100 text-red-800 font-serif border border-red-300 mb-2">
                        {subscribeError}
                      </div>
                    )}
                    {isSubscribed && (
                      <div className="p-3 bg-green-100 text-green-800 font-serif border border-green-300">
                        ü¶ï ‚úì Rex is on it. Check your inbox in the next few minutes.
                      </div>
                    )}
                    <p className="text-xs text-gray-600 font-serif">
                      Free forever ‚Ä¢ Daily before stand-up ‚Ä¢ Unsubscribe anytime
                    </p>
                  </div>
                </div>
              </div>

              {/* Rex Character Spotlight */}
              <div className="lg:col-span-5">
                <div className="border border-gray-300 bg-white p-6 flex flex-col gap-6">
                  <div className="text-center">
                    <span className="inline-block text-xs font-bold uppercase tracking-[0.3em] text-gray-500 mb-2">Meet Rex</span>
                    <Image src="/images/rex.png" alt="Rex the AI Curator" width={260} height={260} className="mx-auto" />
                    <h3 className="text-2xl font-serif font-bold mt-3">Editor-in-Chief, RecursivAI</h3>
                    <p className="text-sm font-serif italic text-gray-600">
                      &ldquo;I&apos;ll keep one eye on the models and one eye on the market.&rdquo;
                    </p>
                  </div>
                  <div className="grid grid-cols-2 gap-3 text-xs sm:text-sm font-serif text-gray-700">
                    <div>
                      <strong>Mission</strong>
                      <p>Surface the 3 moves in AI leaders must see today.</p>
                    </div>
                    <div>
                      <strong>Workflow</strong>
                      <p>Autonomous research, human-caliber synthesis, daily delivery.</p>
                    </div>
                    <div>
                      <strong>Guardrails</strong>
                      <p>Source-first, jargon-light, no speculation without evidence.</p>
                    </div>
                    <div>
                      <strong>Signature</strong>
                      <p>One Rex riff per issue to keep it memorable.</p>
                    </div>
                  </div>
                  <div className="border border-black p-4 bg-[#FFF6D8]">
                    <h4 className="text-xs uppercase tracking-[0.2em] font-semibold text-gray-800 mb-2">Rex&apos;s Editorial Pillars</h4>
                    <ul className="space-y-1 text-sm font-serif">
                      {rexEditorialPillars.map((pillar) => (
                        <li key={pillar} className="flex items-start gap-2">
                          <span className="text-yellow-600" aria-hidden="true">‚ñ£</span>
                          <span>{pillar}</span>
                        </li>
                      ))}
                    </ul>
                  </div>
                </div>
              </div>
            </div>

            {/* Section Divider */}
            <div className="border-t-2 border-double border-gray-400 mb-6 pt-1">
              <h2 className="text-lg font-serif font-bold uppercase tracking-wider text-gray-700">Today&apos;s front page</h2>
            </div>

            {/* Hot News Grid */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
              {hotNewsPosts.map((post, index) => (
                <Link
                  href={`/post/${post.slug}`}
                  key={post.slug}
                  className="group border border-gray-300 bg-white p-5 flex flex-col gap-3 hover:border-yellow-300 hover:shadow-lg transition-all duration-300"
                >
                  <div className="aspect-[16/10] overflow-hidden relative bg-white border border-gray-200">
                    {post.featured_image_url ? (
                      <Image
                        src={post.featured_image_url}
                        alt={post.title}
                        fill
                        className="object-cover group-hover:scale-105 transition-transform duration-500"
                      />
                    ) : (
                      <Image
                        src={getPlaceholderImage(index)}
                        alt="Image placeholder"
                        fill
                        className="object-cover grayscale"
                      />
                    )}
                  </div>
                  <div className="flex flex-col gap-2">
                    <h3 className="text-lg font-serif font-bold leading-tight group-hover:text-gray-800 transition-colors">
                      {post.title}
                    </h3>
                    {post.summary && (
                      <p className="text-sm text-gray-700 font-serif leading-relaxed line-clamp-3">
                        {post.summary}
                      </p>
                    )}
                    <p className="text-xs text-gray-500 italic font-serif">
                      {post.created_at ? formatDate(post.created_at) : ''} ‚Ä¢ Rex verified
                    </p>
                  </div>
                </Link>
              ))}
            </div>

            {/* Daily Routine & Stats */}
            <div className="border-t border-gray-300 pt-6 mb-8">
              <div className="flex flex-col lg:flex-row gap-4">
                <div className="flex-1 border border-gray-200 bg-white p-4">
                  <h3 className="text-base font-serif font-semibold mb-3 flex items-center gap-2">
                    <span>üìö</span>
                    <span>Rex&apos;s Daily Routine</span>
                  </h3>
                  <div className="flex flex-wrap gap-2 text-xs font-serif text-gray-700">
                    <div className="flex items-center gap-2 border border-gray-200 bg-[#FAF9F5] px-3 py-1.5 rounded-full">
                      <span>üåÖ</span>
                      <span>5:00 ‚Ä¢ Scans top AI feeds</span>
                    </div>
                    <div className="flex items-center gap-2 border border-gray-200 bg-[#FAF9F5] px-3 py-1.5 rounded-full">
                      <span>üß†</span>
                      <span>6:00 ‚Ä¢ Ranks breakthroughs</span>
                    </div>
                    <div className="flex items-center gap-2 border border-gray-200 bg-[#FAF9F5] px-3 py-1.5 rounded-full">
                      <span>‚úçÔ∏è</span>
                      <span>6:30 ‚Ä¢ Writes human-first TL;DRs</span>
                    </div>
                    <div className="flex items-center gap-2 border border-gray-200 bg-[#FAF9F5] px-3 py-1.5 rounded-full">
                      <span>üìß</span>
                      <span>7:00 ‚Ä¢ Hits your inbox</span>
                    </div>
                  </div>
                </div>
                <div className="flex-1 border border-gray-200 bg-white p-4">
                  <h4 className="text-base font-serif font-semibold mb-3 flex items-center justify-center gap-2">
                    <span>üìä</span>
                    <span>Rex&apos;s Quick Stats</span>
                  </h4>
                  <div className="grid grid-cols-2 sm:grid-cols-4 gap-3 text-xs font-serif text-gray-700">
                    <div className="text-center">
                      <div className="text-xl font-bold">1,247</div>
                      <div>Papers</div>
                    </div>
                    <div className="text-center">
                      <div className="text-xl font-bold">89</div>
                      <div>Sources</div>
                    </div>
                    <div className="text-center">
                      <div className="text-xl font-bold">12</div>
                      <div>Insights</div>
                    </div>
                    <div className="text-center">
                      <div className="text-xl font-bold">220+</div>
                      <div>Readers</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            {/* Reader Testimonials - Newspaper Style */}
            <div className="border-t-2 border-double border-gray-400 pt-6 mb-8">
              <h3 className="text-2xl font-serif font-bold mb-6 text-center">üì∞ What Rex&apos;s Readers Are Saying</h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                {rexTestimonials.map((testimonial, index) => (
                  <div key={index} className="border border-gray-400 p-4 bg-white">
                    <div className="text-center mb-3">
                      <span className="text-3xl">{testimonial.rex}</span>
                    </div>
                    <blockquote className="text-sm font-serif italic mb-3 text-center">
                      &quot;{testimonial.quote}&quot;
                    </blockquote>
                    <div className="text-center">
                      <div className="font-serif font-bold text-sm">{testimonial.author}</div>
                      <div className="text-xs text-gray-600 font-serif">{testimonial.role}</div>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* Final CTA - Newspaper Ad Style */}
            <div className="border-4 border-double border-black p-8 bg-white text-center mb-8">
              <div className="border-b-2 border-gray-300 pb-4 mb-6">
                <h3 className="text-xs font-bold uppercase tracking-wider text-gray-500 mb-2">Limited Time Offer</h3>
                <h2 className="text-3xl font-serif font-black mb-2">FREE LIFETIME SUBSCRIPTION</h2>
                <p className="text-lg font-serif">To Rex&apos;s Daily AI Intelligence Report</p>
              </div>
              
              <div className="flex justify-center items-center mb-6">
                <div className="text-6xl mr-4">ü¶ï</div>
                <div className="text-left">
                  <h3 className="text-xl font-serif font-bold">Join Rex&apos;s Growing Pack!</h3>
                  <p className="font-serif">220+ AI professionals can&apos;t be wrong</p>
                </div>
              </div>
              
              <div className="flex flex-col sm:flex-row gap-3 max-w-md mx-auto mb-4">
                <input
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  placeholder="your@email.com"
                  className="flex-1 px-4 py-3 border-2 border-gray-300 text-base font-serif"
                  required
                />
                <button
                  onClick={handleSubmit}
                  className="px-8 py-3 bg-black text-white font-serif font-bold hover:bg-gray-800 transition-colors"
                >
                  CLAIM YOUR SPOT
                </button>
              </div>
              
              <div className="grid grid-cols-3 gap-4 text-xs font-serif text-gray-600 border-t border-gray-300 pt-4">
                <div>‚úÖ 100% Free Forever</div>
                <div>‚úÖ Daily 7AM Delivery</div>
                <div>‚úÖ Unsubscribe Anytime</div>
              </div>
              
              <p className="text-sm font-serif italic mt-4 text-gray-700">
                &quot;Don&apos;t let AI evolution leave you behind like it did my fellow dinosaurs!&quot; - Rex ü¶ï
              </p>
            </div>
          </main>

          <Footer />
        </div>
      </div>
    </>
  );
};

export default LandingPage;

export async function getStaticProps() {
  try {
    const POSTS_PER_PAGE = 21;
    const [initialPosts, initialNewsPosts] = await Promise.all([
      getAllPosts({ limit: POSTS_PER_PAGE, offset: 0 }),
      getNewsPosts({ limit: 6 })
    ]);
    return { 
      props: { initialPosts, initialNewsPosts },
      revalidate: 300
    };
  } catch (error) {
    console.error('Failed to fetch initial content:', error);
    return { props: { initialPosts: [], initialNewsPosts: [] }, revalidate: 300 };
  }
}
